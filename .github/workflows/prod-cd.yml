name: Prod deployment
on:
  push:
    branches: [ master ]
env:
  SERVICE_NAME: spacy-api
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      # - name: Install dependencies
      #   run: |
      #     python -m pip install --upgrade pip
      #     if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      # - name: Run tests
      #   run: pytest
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to AWS ECS
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build and push docker image to AWS
        run: |
          docker build -t $ECR_REGISTRY/prod-$SERVICE_NAME:$IMAGE_TAG .
          docker push $ECR_REGISTRY/prod-$SERVICE_NAME:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        env:
          SERVICE_NAME: ${{ env.SERVICE_NAME }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
      - name: Tag AWS container as latest
        run: |
          docker build -t $ECR_REGISTRY/prod-$SERVICE_NAME:$IMAGE_TAG .
          docker push $ECR_REGISTRY/prod-$SERVICE_NAME:$IMAGE_TAG
        env:
          SERVICE_NAME: ${{ env.SERVICE_NAME }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: latest
