name: Staging deployment
on:
  push:
    branches: [ dev ]
env:
  SERVICE_NAME: nlt-transformer-models
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install pipenv package manager
        run: pip install pipenv
      - name: Install dependencies
        run: pipenv install
      - name: Build Docker image and push to GitHub Packages Registry
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          repository: buccaneerai/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }}
          tags: dev,${{ github.sha }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build and push docker image to AWS
        run: |
          docker build -t $ECR_REGISTRY/staging-$SERVICE_NAME:$IMAGE_TAG .
          docker push $ECR_REGISTRY/staging-$SERVICE_NAME:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        env:
          SERVICE_NAME: ${{ env.SERVICE_NAME }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
      - name: Tag AWS container as staging
        run: |
          docker build -t $ECR_REGISTRY/staging-$SERVICE_NAME:$IMAGE_TAG .
          docker push $ECR_REGISTRY/staging-$SERVICE_NAME:$IMAGE_TAG
        env:
          SERVICE_NAME: ${{ env.SERVICE_NAME }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: staging
